set backspace=indent,eol,start
set history=512

set ignorecase
set smartcase
set hlsearch
set incsearch
set hlsearch

set splitbelow
set splitright
set scrolloff=3 " keep 3 lines below and above cursor
set linebreak   " show wrap at word boundaries

map Y y$
map 0 ^
imap ,, <esc>
" when )} is added automatically quick move without exiting insert mode
inoremap <S-space> <Right>

" delete whole line without copying
nnoremap X "_dd

let mapleader = ","
nnoremap <leader><space> :nohlsearch<CR>

" yank to clipboard (like ctrl+c)
noremap <leader>y "+y

" paste from clipboard (like ctrl+v)
noremap <leader>p "+p

" delete without copying
nnoremap <leader>d "_d

" redo last command
map <leader>. :@:<CR>

noremap <S-j> <C-d>
noremap <S-k> <C-u>
noremap <C-j> 3<C-e>
noremap <C-k> 3<C-y>
noremap <leader>j gt
noremap <leader>k gT
noremap <leader>h <C-w>h
noremap <leader>l <C-w>l

" Move a line of text using ALT+[jk]
nnoremap <M-j> :m .+1<CR>==
nnoremap <M-k> :m .-2<CR>==
vnoremap <M-j> :m '>+1<CR>gv=gv
vnoremap <M-k> :m '<-2<CR>gv=gv

inoremap  <Up>     <NOP>
inoremap  <Down>   <NOP>
inoremap  <Left>   <NOP>
noremap   <Up>     <NOP>
noremap   <Down>   <NOP>
noremap   <Left>   <NOP>

noremap   <Right>  <NOP>
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

function! VisualSelection(direction, extra_filter) range
    let l:saved_reg = @"
    execute "normal! vgvy"

    let l:pattern = escape(@", "\\/.*'$^~[]")
    let l:pattern = substitute(l:pattern, "\n$", "", "")

    if a:direction == 'gv'
        call CmdLine("Ack '" . l:pattern . "' " )
    elseif a:direction == 'replace'
        call CmdLine("%s" . '/'. l:pattern . '/')
    endif

    let @/ = l:pattern
    let @" = l:saved_reg
endfunction

" Visual Studio specific mappings
map gi :vsc Edit.GoToImplementation<CR>
map gr :vsc Edit.FindAllReferences<CR>
map gp :vsc Edit.PeekDefinition<CR>
nnoremap <leader>m :vsc Edit.NextMethod<CR>
nnoremap <leader>M :vsc Edit.PreviousMethod<CR>
nnoremap <leader>b :vsc Debug.ToggleBreakpoint<CR>
nnoremap <leader>kd :vsc Edit.FormatDocument<CR>
nnoremap <leader>ks :vsc Edit.SurroundWith<CR>
noremap <leader>c :vsc Edit.CommentSelection<CR>
noremap <leader>u :vsc Edit.UncommentSelection<CR>
nnoremap <leader>r : vsc Refactor.Rename<CR>
