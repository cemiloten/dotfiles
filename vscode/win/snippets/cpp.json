{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"For loop <, int": {
		"prefix": ["forint", "for;int"],
		"body": [ "for (int $1 = 0; $1 < $2; ++$1) {", "\t$0", "}" ],
		"description": "Generate a for loop with < matching"
	},

	"For loop <, uint": {
		"prefix": ["foruint", "forunsignedint", "for;unsignedint", "for;uint"],
		"body": [ "for (unsigned int $1 = 0; $1 < $2; ++$1) {", "\t$0", "}" ],
		"description": "Generate a for loop with < matching"
	},

	"For loop <, size_t": {
		"prefix": ["forsize_t", "for;size_t"],
		"body": [ "for (size_t $1 = 0; $1 < $2; ++$1) {", "\t$0", "}" ],
		"description": "Generate a for loop with < matching"
	},

	"printf": {
		"prefix": "printf;",
		"body": [ "printf(\"$0\\n\");", ],
		"description": "Print something to the console"
	},

	"cout": {
		"prefix": "cout;",
		"body": [ "std::cout << $0 << std::endl;", ],
		"description": "Print something to the console with c++ cout"
	}



}